diff --git a/linux/utils/compact.h b/linux/utils/compact.h
index 209e735..1c29b83 100644
--- a/linux/utils/compact.h
+++ b/linux/utils/compact.h
@@ -10,7 +10,7 @@
 #include <linux/scatterlist.h>
 #include <linux/vmalloc.h>
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0) || RHEL_RELEASE_CODE >= RHEL_RELEASE_VERSION(9, 4)
 #define class_create_compat class_create
 #else
 #define class_create_compat(name) class_create(THIS_MODULE, name)
@@ -29,7 +29,7 @@
 #define pci_dbg(pdev, fmt, arg...)	dev_dbg(&(pdev)->dev, fmt, ##arg)
 #endif
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 5, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 5, 0) || RHEL_RELEASE_CODE >= RHEL_RELEASE_VERSION(9, 4)
 #define get_user_pages_compact get_user_pages
 #elif LINUX_VERSION_CODE >= KERNEL_VERSION(4, 9, 0)
 #define get_user_pages_compact(start, nr_pages, gup_flags, pages) \
@@ -68,7 +68,7 @@ static inline void mmap_read_unlock(struct mm_struct *mm)
 }
 #endif /* _LINUX_MMAP_LOCK_H */
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0) && LINUX_VERSION_CODE < KERNEL_VERSION(5, 15, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0) && LINUX_VERSION_CODE < KERNEL_VERSION(5, 15, 0) &! RHEL_RELEASE_CODE >= RHEL_RELEASE_VERSION(9, 5)
 #define sg_alloc_table_from_pages_segment_compat __sg_alloc_table_from_pages
 #else
 static inline struct scatterlist *sg_alloc_table_from_pages_segment_compat(struct sg_table *sgt,
@@ -91,6 +91,8 @@ static inline struct scatterlist *sg_alloc_table_from_pages_segment_compat(struc
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0)
     res = sg_alloc_table_from_pages_segment(sgt, pages, n_pages, offset, size, max_segment, gfp_mask);
+#elif RHEL_RELEASE_CODE >= RHEL_RELEASE_VERSION(9, 5)
+    res = sg_alloc_table_from_pages_segment(sgt, pages, n_pages, offset, size, max_segment, gfp_mask);
 #elif LINUX_VERSION_CODE >= KERNEL_VERSION(4, 15, 0)
     res = __sg_alloc_table_from_pages(sgt, pages, n_pages, offset, size, max_segment, gfp_mask);
 #else
diff --git a/linux/vdma/memory.c b/linux/vdma/memory.c
index 7ad4a68..7a58154 100644
--- a/linux/vdma/memory.c
+++ b/linux/vdma/memory.c
@@ -34,7 +34,7 @@ static void clear_sg_table(struct sg_table *sgt);
 #define DMA_NS_NAME "DMA_BUF"
 #endif // LINUX_VERSION_CODE < KERNEL_VERSION(6, 13, 0)
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0) || RHEL_RELEASE_CODE >= RHEL_RELEASE_VERSION(9, 4)
 // Import DMA_BUF namespace for needed kernels
 MODULE_IMPORT_NS(DMA_NS_NAME);
 #endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0) */
